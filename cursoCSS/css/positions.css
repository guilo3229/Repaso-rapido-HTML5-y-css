/* Posicionamiento CSS

  La propiedas FlOAT y POSITION nos permiten modificar la posicion natural de cualquier elementos del documento HTML 
  El navegador coloca cada elementosteniendo en cuenta el orden en el que aparece en el documento y su tipo de visualizacion dependiendo si es un elemento de línea o de bloque.

  Con FLOAT y POSITION podoemos modificar este comportamiento.
  Elementos Flotantes
    -float: Convierte un elemento en flotante desplazandolo hasta la zona mas a la izquierda o mas a la derecha de la posicione en la que originalmente se encontraba.
    -clear: Limpia la flotacion (left, right,both)
    
  Tipos de Posicionamiento
    -static (default)
    -rellative
    -absolute
    -fixed
    -sticky
    
  Para mover los elementos posicionados se activan las propidades:
    -top (vertical - eje Y) mas preferencia que bottom
    -bottom (vertical - eje Y)
    -left (horizontal - eje X) mas preferencia que right
    -right (horizontal - eje X)
    -z-index (profundidad - eje Z)


  Las propiedades top y left van a tener preferencia por sobre bottom y right respectivamente
  
  Estas 5 propiedades no funcionan con el valor de static*/

/* static: Es el valor por defecto,significa que el elmento respeta el flujo del documento HTML, por lo que no se puede mover ni posicionar,los estilos top,left ...etc no funcionarian */
.static {
  background-color: yellow;
  position: static;
  top: 10px;
  left: 10px;
}
/* Relative: El elemento conserva sus dimensiones y posicion original en el flujo del documento. Si se mueve toma como referecia su posición original,Las propiedades top y left van a tener preferencia por sobre bottom y right respectivamente */

.relative {
  background-color: turquoise;
  position: relative;
  /* El movimientos es que se aleja */
  width: 300px;
  height: 50px;
  /* top: 50px;
  left: 50px; */
  bottom: 50px;
  right: 50px;
  top: -30px;
  top: 300px;
  left: 50px;
}

/* Absolute: El elemento pierde sus dimensiones y posición original en el flujo del documento. Si se mueve puede tomar como referencia 2 elementos:
 1) El primer ancestro con posicionamiento relativo
 2) Si no encuentra un ancestro relativo, se mueve respecto del documento HTML */
.absolute {
  background-color: tomato;
  position: absolute;
  width: 200px;
  height: 50px;
  /* top: 0;
  left: 0; */
  /* top: 100px;
  left: 100px; */
  right: 0;
  bottom: 0;
}
/* Para que los hijos se muevan respecto a su padre este debe ser position:relative */
.relative-parent {
  background-color: khaki;
  width: 600px;
  height: 50px;
  position: relative;
  top: 50px;
  left: 50px;
}
.absolute-child {
  background-color: lightcoral;
  position: absolute;
  /* left: 25px;
  top: 25px; */
  /* top: -50px;
  left: -50px; */
  bottom: 0;
  right: 0;
}

/* Fixed: El elemento pierde sus dimensiones y posición original en el flujo del documento. Si se mueve toma como referencia el documento HTML y queda fijo en la posición, cuando el scroll se mueva, el elemento no lo habrá, queda FIJO */

.fixed {
  background-color: lightgreen;
  position: fixed;
  width: 300px;
  height: 100px;
  /* right: 20px;
  bottom: 10px; */
  top: 30px;
  left: 400px;
}

/* Sticky: es una combinación de posicionamiento relative y fixed, para este posicionamiento las propiedades de top,left,bottom y right no mueven el elemento, sirven como un punto de referencia, mientras no lleguen a ese valor el elmento se comporta como relative, cuando llega se convierte en fixed*/

/* Para que este comportamiento funcione el elmento sticky debe ser hijo directo del body o su elemento contenedor debe tener dimensiones definidas y solo será sticky dentro de las dimensiones de su contenedor padre. */
.sticky {
  background-color: lightskyblue;
  position: sticky;
  top: 50pxz;
}
.sticky-parent {
  border: thin dashed black;
  height: 600px;
}
.sticky-child {
  background-color: lightslategray;
  position: sticky;
  top: 75px;
}

/* Z-index: Propiedad que permite controlar la profundidad de los elementos posicionados, su valor por defecto es auto, acepta números positivos negativos y cero.
A mayor valor el elementos esta más al frente, a menor valor más al fondo.
Un elmento padre nunca podrá estsar sobre sus elementos hijos, sin embargo los elmentos hijos si pueden dándoles un valor negativo y que el elemento padre no tenga definido un z-index en este elmento padre.
*/

.z-index-1,
.z-index-2 {
  background-color: mediumaquamarine;
  border: thin solid black;
  width: 200px;
  height: 200px;
  position: relative;
}

.z-index-1 {
  z-index: 1;
  z-index: 0;
}
.z-index-2 {
  top: -200px;
  left: 100px;
  z-index: 2;
  z-index: -1;
}
.z-index-parent {
  background-color: mediumorchid;
  width: 300px;
  height: 300px;
  position: relative;
}
.z-index-child {
  background-color: mediumvioletred;
  position: relative;
  width: 150px;
  height: 150px;
  top: -75px;
  left: 75px;

  z-index: -3;
}
